(type && (bool bool -> bool))
(type || (bool bool -> bool))
(func (&& a b) (if a b false))
(func (|| a b) (if a true b))
(type ! (bool -> bool))
(func (! b) (if b false true))
(type > (int int -> bool))
(type >= (int int -> bool))
(type <= (int int -> bool))
(func (> a b) (< b a))
(func (>= a b) (|| (= a b) (> a b)))
(func (<= a b) (|| (= a b) (< a b)))
(type pos? (int -> bool))
(type neg? (int -> bool))
(type zero? (int -> bool))
(func (pos? n) (< 0 n))
(func (neg? n) (> 0 n))
(func (zero? n) (= 0 n))
(type +1 (int -> int))
(type -1 (int -> int))
(func (+1 n) (+ n 1))
(func (-1 n) (- n 1))
(type even (int -> bool))
(type odd (int -> bool))
(func (even n) (if (zero? n) true (odd (-1 n))))
(func (odd n) (if (zero? n) false (even (-1 n))))
(type fib (int -> int))
(type fib-helper (int int int -> int))
(func (fib n) (fib-helper 0 1 (+1 n)))
(func (fib-helper n a b) (if (zero? n) a (fib-helper (-1 n) a (+ a b))))
(type neg (int -> int))
(func (neg n) (- 0 n))
(type * (int int -> int))
(func (* a b) (if (zero? b) 0 (if (neg? b) (neg (* a (neg b))) (+ a (* a (-1 b))))))
(type fact (int -> int))
(func (fact n) (if (pos? n) (* n (fact (-1 n))) 1))
(type % (int int -> int))
(func (% a b) (if (< a b) a (% (- a b) b)))
(type // (int int -> int))
(func (// a b) (if (neg? a) (neg (// (neg a) b)) (if (neg? b) (neg (// a (neg b))) (if (>= a b) (+1 (// (- a b) b)) 0))))
(type div? (int int -> bool))
(func (div? a b) (= 0 (% a b)))
(type gcd (int int -> int))
(func (gcd a b) (if (zero? b) a (gcd b (% a b))))
(type lcm (int int -> int))
(type lcm-helper (int int int -> int))
(func (lcm a b) (lcm-helper 2 a b))
(func (lcm-helper n a b) (if (&& (> n a) (> n b)) 1 (if (&& (div? a n) (div? b n)) (* n (lcm-helper n (// a n) (// b n))) (if (div? a n) (* n (lcm-helper n (// a n) b)) (if (div? b n) (* n (lcm-helper n a (// b n))) (lcm-helper (+1 n) a b))))))
(type prime? (int -> bool))
(type prime-helper (int int -> bool))
(func (prime? n) (prime-helper 2 n))
(func (prime-helper p n) (if (>= p n) true (&& (! (div? n p)) (prime-helper (+1 p) n))))
(type . ((int -> bool) (bool -> int) bool -> bool))
(func (. f g x) (f (g x)))
